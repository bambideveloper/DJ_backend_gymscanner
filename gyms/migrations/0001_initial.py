# Generated by Django 4.0 on 2021-12-31 09:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('masters', '0001_initial'),
        ('language', '0002_language_title_alter_language_flag'),
        ('users', '0003_users_language_business'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gym_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Category Name')),
                ('image', models.ImageField(default='default/gym_category.jpg', upload_to='gyms/category')),
                ('language', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='language.language')),
            ],
            options={
                'db_table': 'gym_category',
            },
        ),
        migrations.CreateModel(
            name='Gym_Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=250, verbose_name='Content')),
            ],
            options={
                'db_table': 'gym_description',
            },
        ),
        migrations.CreateModel(
            name='Gym_Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.FloatField(verbose_name='Price')),
                ('location', models.FloatField(verbose_name='Location')),
                ('staff', models.FloatField(verbose_name='Staff')),
                ('facility', models.FloatField(verbose_name='Facility')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.business')),
            ],
            options={
                'db_table': 'gym_review',
            },
        ),
        migrations.CreateModel(
            name='Gym_Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(max_length=250, verbose_name='Plan Type')),
                ('plan_name', models.CharField(max_length=250, verbose_name='Plan Name')),
                ('plan_validity', models.IntegerField(verbose_name='Plan Validity in Months')),
                ('plan_price', models.FloatField(verbose_name='Plan Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_At')),
                ('status', models.BooleanField(default=True, verbose_name='Activation')),
                ('description', models.ManyToManyField(db_table='related_subscription_description', null=True, to='gyms.Gym_Description')),
            ],
            options={
                'db_table': 'gym_subscription',
            },
        ),
        migrations.CreateModel(
            name='Gyms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.CharField(max_length=250, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(max_length=250, null=True, verbose_name='Longitude')),
                ('logo', models.ImageField(default='default/gym_logo.jpg', upload_to='gyms/logo')),
                ('video', models.FileField(default='default/gym_video.jpg', upload_to='gyms/video')),
                ('banner', models.ManyToManyField(db_table='related_gyms_banner', null=True, to='masters.Banner')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.business')),
                ('category', models.ManyToManyField(db_table='related_gyms_category', null=True, to='gyms.Gym_Category')),
                ('feature', models.ManyToManyField(db_table='related_gyms_feature', null=True, to='masters.Feature')),
                ('review', models.ManyToManyField(db_table='related_gyms_review', null=True, to='gyms.Gym_Review')),
                ('subscription', models.ManyToManyField(db_table='related_gyms_subscription', null=True, to='gyms.Gym_Subscription')),
            ],
            options={
                'db_table': 'gyms',
            },
        ),
        migrations.CreateModel(
            name='Gym_Timing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=250, verbose_name='Day of Week')),
                ('open_time', models.TimeField(blank=True, null=True, verbose_name='Open Time')),
                ('close_time', models.TimeField(blank=True, null=True, verbose_name='Close Time')),
                ('gym', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gyms.gyms')),
            ],
            options={
                'db_table': 'gym_timing',
            },
        ),
        migrations.CreateModel(
            name='Gym_Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Bank Name')),
                ('account_number', models.CharField(max_length=250, verbose_name='Bank Account Number')),
                ('swift_code', models.CharField(max_length=250, verbose_name='Swift Code')),
                ('account_holder_name', models.CharField(max_length=250, verbose_name='Account Holder Name')),
                ('gym', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gyms.gyms')),
            ],
            options={
                'db_table': 'gym_bank',
            },
        ),
    ]
